{
  "contexts": {
    "application": {
      "mappings": {
        "dispatcherHandlers": {
          "webHandler": [
            {
              "predicate": "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}",
              "handler": "public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)",
              "details": {
                "requestMappingConditions": {
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "patterns": [
                    "/actuator/health"
                  ],
                  "produces": [
                    {
                      "negated": false,
                      "mediaType": "application/vnd.spring-boot.actuator.v2+json"
                    },
                    {
                      "negated": false,
                      "mediaType": "application/json"
                    }
                  ],
                  "params": [],
                  "consumes": []
                },
                "handlerMethod": {
                  "name": "handle",
                  "className": "org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping.ReadOperationHandler",
                  "descriptor": "(Lorg/springframework/web/server/ServerWebExchange;)Lorg/reactivestreams/Publisher;"
                }
              }
            },
            {
              "predicate": "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}",
              "handler": "public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)",
              "details": {
                "requestMappingConditions": {
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "patterns": [
                    "/actuator/info"
                  ],
                  "produces": [
                    {
                      "negated": false,
                      "mediaType": "application/vnd.spring-boot.actuator.v2+json"
                    },
                    {
                      "negated": false,
                      "mediaType": "application/json"
                    }
                  ],
                  "params": [],
                  "consumes": []
                },
                "handlerMethod": {
                  "name": "handle",
                  "className": "org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping.ReadOperationHandler",
                  "descriptor": "(Lorg/springframework/web/server/ServerWebExchange;)Lorg/reactivestreams/Publisher;"
                }
              }
            },
            {
              "predicate": "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}",
              "handler": "protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.web.server.ServerWebExchange)",
              "details": {
                "requestMappingConditions": {
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "patterns": [
                    "/actuator"
                  ],
                  "produces": [
                    {
                      "negated": false,
                      "mediaType": "application/vnd.spring-boot.actuator.v2+json"
                    },
                    {
                      "negated": false,
                      "mediaType": "application/json"
                    }
                  ],
                  "params": [],
                  "consumes": []
                },
                "handlerMethod": {
                  "name": "links",
                  "className": "org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping",
                  "descriptor": "(Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/Map;"
                }
              }
            },
            {
              "predicate": "{[/hello],methods=[GET]}",
              "handler": "public java.lang.String com.example.demo.MyController.getMethodName(java.lang.String)",
              "details": {
                "requestMappingConditions": {
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "patterns": [
                    "/hello"
                  ],
                  "produces": [],
                  "params": [],
                  "consumes": []
                },
                "handlerMethod": {
                  "name": "getMethodName",
                  "className": "com.example.demo.MyController",
                  "descriptor": "(Ljava/lang/String;)Ljava/lang/String;"
                }
              }
            },
            {
              "predicate": "{[/pp || /qq],methods=[GET]}",
              "handler": "public java.lang.String com.example.demo.MyController.hello()",
              "details": {
                "requestMappingConditions": {
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "patterns": [
                    "/pp",
                    "/qq"
                  ],
                  "produces": [],
                  "params": [],
                  "consumes": []
                },
                "handlerMethod": {
                  "name": "hello",
                  "className": "com.example.demo.MyController",
                  "descriptor": "()Ljava/lang/String;"
                }
              }
            },
            {
              "predicate": "/webjars/**",
              "handler": "ResourceWebHandler [locations=[class path resource [META-INF/resources/webjars/]], resolvers=[org.springframework.web.reactive.resource.PathResourceResolver@5f115dc8]]"
            },
            {
              "predicate": "/**",
              "handler": "ResourceWebHandler [locations=[class path resource [META-INF/resources/], class path resource [resources/], class path resource [static/], class path resource [public/]], resolvers=[org.springframework.web.reactive.resource.PathResourceResolver@526469af]]"
            }
          ]
        }
      }
    }
  }
}
